---
# uninstall old versions of docker
- name: Uninstall old versions of docker
  become: yes
  ansible.builtin.apt:
    name: ['docker', 'docker-engine', 'docker.io']
    state: absent

# install dependencies
- name: Install dependencies
  become: yes
  ansible.builtin.apt:
    name: ['apt-transport-https', 'ca-certificates', 'curl', 'python-setuptools', 'software-properties-common']
    state: latest
    install_recommends: no
    update_cache: yes
  environment: "{{ proxy_env }}"

# add Docker apt repository key
- name: Add Docker apt repository key
  become: yes
  ansible.builtin.apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present
  environment: "{{ proxy_env }}"

# add docker apt repo and update apt cache
- name: Add Docker apt repository and update apt cache
  become: yes
  ansible.builtin.apt_repository:
    repo: "deb https://download.docker.com/linux/{{ ansible_distribution|lower }} {{ ansible_distribution_release }} stable"
    mode: '644'
    update_cache: yes
    state: present
  environment: "{{ proxy_env }}"

# install Docker
- name: Install docker
  become: yes
  ansible.builtin.apt:
    name: ['docker-ce', 'docker-ce-cli', 'containerd.io']
    state: latest
    install_recommends: no
    update_cache: yes
  environment: "{{ proxy_env }}"

# install docker compose
- name: Install docker-compose
  become: yes
  ansible.builtin.pip:
    name: ['docker-compose']
    state: latest
  environment: "{{ proxy_env }}"

# reload config
- name: Reload systemd daemons
  command: systemctl daemon-reload
  become: yes

# restart docker daemon
- name: Restart docker daemon
  command: systemctl restart docker
  become: yes

# restart Docker daemon
- name: Restart docker
  service:
    name: docker
    state: restarted
  become: yes

